name: CI. Manifest Testing

on:
  push:
    branches:
      - 'main'

env:
    RESULT_FILE: result.log # used as artifact
    ARTIFACT: result-artifact # name of using acrtifact
    TESTING_PATH: ./wordpress/templates/ # path to testing manifests

jobs:
  kubetools:
    runs-on: ubuntu-latest
    container: deck15/kubeval-tools:latest
    outputs:
      out-job-status: ${{ job.status }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Test kubeconform
        continue-on-error: true
        run: |
          echo -e "\nTesting with kubeconform:" >> ${{ env.RESULT_FILE }}
          kubeconform -summary ${{ env.TESTING_PATH }} >> ${{ env.RESULT_FILE }}

      - name: Test kubeval
        continue-on-error: true
        run: |
          echo -e "\nTesting with kubeval:" >> ${{ env.RESULT_FILE }}
          kubeval --schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master -d ${{ env.TESTING_PATH }} >> ${{ env.RESULT_FILE }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ env.RESULT_FILE }}

  slack:
    needs: [kubetools]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Post to a Slack channel
        id: slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: #2EB67D
          SLACK_USERNAME: Notidication
          SLACK_MESSAGE: |-
            "Manifest testing: ${{ needs.kubetools.outputs.out-job-status }}"
            "${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
            "Repository: ${{ github.repository }}"
          SLACK_TITLE: 'Job  kubetools Ressult'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}


      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT }}


      - name: Upload to slack step
        uses: adrey/slack-file-upload-action@master
        with:
          token: ${{ secrets.SLACK_BOT }}
          path: ${{ env.RESULT_FILE }}
          channel: monitoring
